version: "3.9"

services:
  db:
    build:
      context: ..
      dockerfile: docker/postgres/Dockerfile
    container_name: ocsp-postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ocsp-network

  # Thêm pgAdmin để quản lý DB trực quan
  # admin@ocsp.com
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ocsp-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ocsp.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - ocsp-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ocsp-api
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # Database Connection
      ConnectionStrings__DefaultConnection: ${CONNECTION_STRINGS__DEFAULTCONNECTION}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ASPNETCORE_URLS: ${ASPNETCORE_URLS}

      # JWT Configuration
      Jwt__SecretKey: ${JWT__SECRETKEY}

      # Email Configuration
      Email__SmtpHost: ${EMAIL__SMTPHOST}
      Email__SmtpPort: ${EMAIL__SMTPPORT}
      Email__Username: ${EMAIL__USERNAME}
      Email__Password: ${EMAIL__PASSWORD}
      Email__FromEmail: ${EMAIL__FROMEMAIL}
      Email__EnableSsl: ${EMAIL__ENABLESSL}
    ports:
      - "8080:8080"
    networks:
      - ocsp-network

volumes:
  db_data:
  pgadmin_data:  # Thêm volume cho pgAdmin

networks:
  ocsp-network:
    driver: bridge
